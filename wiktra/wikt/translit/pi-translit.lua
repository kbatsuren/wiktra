local export = {}
local gsub = mw.ustring.gsub

function export.trwo(text, lang, sc, options)
    if (sc == "Brah") then
        text = require("Brah-translit").tr(text, lang, sc)
    elseif (sc == "Deva") then
        text = require("sa-translit").tr(text, lang, sc)
    elseif (sc == "Sinh") then
        text = require("si-translit").tr(text, lang, sc)
    elseif sc == "Beng" or sc == "Mymr" or sc == "Lana" or sc == "Khmr" or sc == "Thai" or sc == "Laoo" then
        local u = mw.ustring.char
        local function dc(x) -- Use this to make marks legible.  The name 'dc' means 'drop carrier'.
            return gsub(x, "[ëÄì‡§ï‡¶ï‡∂ö·ÄÄ‡∏Å·®†·ûÄ‡∫Å]", "") -- These are the letter ka in the 9 supported Indic scripts.
        end
        local consonants = { -- And parts 1 of NFC-multipart independent vowels!
            -- Bengali
            ["‡¶ï"] = "k",
            ["‡¶ñ"] = "kh",
            ["‡¶ó"] = "g",
            ["‡¶ò"] = "gh",
            ["‡¶ô"] = "·πÖ",
            ["‡¶ö"] = "c",
            ["‡¶õ"] = "ch",
            ["‡¶ú"] = "j",
            ["‡¶ù"] = "jh",
            ["‡¶û"] = "√±",
            ["‡¶ü"] = "·π≠",
            ["‡¶†"] = "·π≠h",
            ["‡¶°"] = "·∏ç",
            ["‡¶¢"] = "·∏çh",
            ["‡¶£"] = "·πá",
            ["‡¶§"] = "t",
            ["‡¶•"] = "th",
            ["‡¶¶"] = "d",
            ["‡¶ß"] = "dh",
            ["‡¶®"] = "n",
            ["‡¶™"] = "p",
            ["‡¶´"] = "ph",
            ["‡¶¨"] = "b",
            ["‡¶≠"] = "bh",
            ["‡¶Æ"] = "m",
            ["‡¶Ø"] = "y",
            ["‡¶∞"] = "r",
            ["‡¶≤"] = "l",
            ["‡¶≤‡¶º"] = "·∏∑", -- xx['‡§µ']='v',
            ["‡¶∂"] = "≈õ",
            ["‡¶∑"] = "·π£",
            ["‡¶∏"] = "s",
            ["‡¶π"] = "h",
            ["‡ß∞"] = "v",
            ["‡ß∞" .. u(0x200d)] = "v",
            ["‡ß±"] = "v",
            -- Myanmar
            ["·ÄÄ"] = "k",
            ["·ÄÅ"] = "kh",
            ["·ÄÇ"] = "g",
            ["·ÄÉ"] = "gh",
            ["·ÄÑ"] = "·πÖ",
            ["·ÄÖ"] = "c",
            ["·ÄÜ"] = "ch",
            ["·Äá"] = "j",
            ["·Äà"] = "jh",
            ["·Äâ"] = "√±",
            ["·Äã"] = "·π≠",
            ["·Äå"] = "·π≠h",
            ["·Äç"] = "·∏ç",
            ["·Äé"] = "·∏çh",
            ["·Äè"] = "·πá",
            ["·Äê"] = "t",
            ["·Äë"] = "th",
            ["·Äí"] = "d",
            ["·Äì"] = "dh",
            ["·Äî"] = "n",
            ["·Äï"] = "p",
            ["·Äñ"] = "ph",
            ["·Äó"] = "b",
            ["·Äò"] = "bh",
            ["·Äô"] = "m",
            ["·Äö"] = "y",
            ["·Äõ"] = "r",
            ["·Äú"] = "l",
            ["·Äù"] = "v",
            ["·Ä†"] = "·∏∑",
            ["·Åê"] = "≈õ",
            ["·Åë"] = "·π£",
            ["·Äû"] = "s",
            ["·Äü"] = "h",
            ["·Ää"] = "√±√±",
            ["·Äø"] = "ss",
            ["·Ä°"] = " º",
            -- Subscript consonants: 103B..103E, 105E..1060
            [dc("·ÄÄ·Äª")] = "y",
            [dc("·ÄÄ·Äº")] = "r",
            [dc("·ÄÄ·ÄΩ")] = "v",
            [dc("·ÄÄ·Äæ")] = "h",
            [dc("·ÄÄ·Åû")] = "n",
            [dc("·ÄÄ·Åü")] = "m",
            [dc("·ÄÄ·Å†")] = "l",
            -- Mon Pali consonants
            ["·Åö"] = "·πÖ",
            ["·Åõ"] = "jh",
            -- Shan (Pali) consonants - Excludes SHAN THA, MEDIAL WA, SIGN SHAW
            ["·Åµ"] = "k",
            ["·Å∂"] = "kh",
            ["·Å∑"] = "g",
            ["Íß†"] = "gh", -- ['']='·πÖ',
            ["·Å∏"] = "c",
            ["Íß°"] = "ch",
            ["·Åπ"] = "j",
            ["Íß¢"] = "jh",
            ["·Å∫"] = "√±",
            ["Í©¶"] = "·π≠",
            ["Í©ß"] = "·π≠h",
            ["Í©®"] = "·∏ç",
            ["Í©©"] = "·∏çh",
            ["Íß£"] = "·πá",
            --			['']='t', ['']='th',
            ["·Åª"] = "d",
            ["Í©™"] = "dh",
            ["·Åº"] = "n",
            --			['']='p',
            ["·ÅΩ"] = "ph",
            ["·Åø"] = "b",
            ["Íß§"] = "bh", -- ['']='m',
            --			['']='y', ['']='r', ['']='l', ['']='v',
            ["Í©Æ"] = "·∏∑",
            --			['']='≈õ', ['']='·π£', ['']='s',
            ["·ÇÅ"] = "h",
            --		    ['']='√±√±', ['']='ss',
            ["·Ä¢"] = " º",
            -- Other first parts of independent vowels.
            ["·Ä£"] = "i",
            ["·Ä•"] = "u",
            -- Lanna
            ["·®†"] = "k",
            ["·®°"] = "kh",
            ["·®£"] = "g",
            ["·®•"] = "gh",
            ["·®¶"] = "·πÖ",
            ["·®ß"] = "c",
            ["·®®"] = "ch",
            ["·®©"] = "j",
            ["·®´"] = "jh",
            ["·®¨"] = "√±",
            ["·®≠"] = "·π≠",
            ["·®Æ"] = "·π≠h",
            ["·®Ø"] = "·∏ç",
            ["·®∞"] = "·∏çh",
            ["·®±"] = "·πá",
            ["·®≤"] = "t",
            ["·®≥"] = "th",
            ["·®¥"] = "d",
            ["·®µ"] = "dh",
            ["·®∂"] = "n",
            ["·®∑"] = "p",
            ["·®∏"] = "p",
            ["·®π"] = "ph",
            ["·®ª"] = "b",
            ["·®Ω"] = "bh",
            ["·®æ"] = "m",
            ["·®ø"] = "y",
            ["·©Å"] = "r",
            ["·©É"] = "l",
            ["·©Ö"] = "v",
            ["·©ä"] = "·∏∑",
            ["·©Ü"] = "≈õ",
            ["·©á"] = "·π£",
            ["·©à"] = "s",
            ["·©â"] = "h",
            ["·©î"] = "ss",
            ["·©ã"] = " º",
            ["·©ê"] = "≈´",
            -- Subscript consonants: 1A55, 1A56, 1A5B to 1A5E
            [dc("·®†·©ï")] = "r",
            [dc("·®†·©ñ")] = "l",
            [dc("·®†·©õ")] = "·π≠h",
            [dc("·®†·©ú")] = "m",
            [dc("·®†·©ù")] = "p",
            [dc("·®†·©û")] = "s",
            -- Khmer
            ["·ûÄ"] = "k",
            ["·ûÅ"] = "kh",
            ["·ûÇ"] = "g",
            ["·ûÉ"] = "gh",
            ["·ûÑ"] = "·πÖ",
            ["·ûÖ"] = "c",
            ["·ûÜ"] = "ch",
            ["·ûá"] = "j",
            ["·ûà"] = "jh",
            ["·ûâ"] = "√±",
            ["·ûä"] = "·π≠",
            ["·ûã"] = "·π≠h",
            ["·ûå"] = "·∏ç",
            ["·ûç"] = "·∏çh",
            ["·ûé"] = "·πá",
            ["·ûè"] = "t",
            ["·ûê"] = "th",
            ["·ûë"] = "d",
            ["·ûí"] = "dh",
            ["·ûì"] = "n",
            ["·ûî"] = "p",
            ["·ûï"] = "ph",
            ["·ûñ"] = "b",
            ["·ûó"] = "bh",
            ["·ûò"] = "m",
            ["·ûô"] = "y",
            ["·ûö"] = "r",
            ["·ûõ"] = "l",
            ["·ûú"] = "v",
            ["·û°"] = "·∏∑",
            ["·ûù"] = "≈õ",
            ["·ûû"] = "·π£",
            ["·ûü"] = "s",
            ["·û†"] = "h",
            ["·û¢"] = " º",
            -- Thai
            ["‡∏Å"] = "k",
            ["‡∏Ç"] = "kh",
            ["‡∏Ñ"] = "g",
            ["‡∏Ü"] = "gh",
            ["‡∏á"] = "·πÖ",
            ["‡∏à"] = "c",
            ["‡∏â"] = "ch",
            ["‡∏ä"] = "j",
            ["‡∏å"] = "jh",
            ["‡∏ç"] = "√±",
            ["‡∏è"] = "·π≠",
            ["‡∏ê"] = "·π≠h",
            ["‡∏ë"] = "·∏ç",
            ["‡∏í"] = "·∏çh",
            ["‡∏ì"] = "·πá",
            ["‡∏ï"] = "t",
            ["‡∏ñ"] = "th",
            ["‡∏ó"] = "d",
            ["‡∏ò"] = "dh",
            ["‡∏ô"] = "n",
            ["‡∏õ"] = "p",
            ["‡∏ú"] = "ph",
            ["‡∏û"] = "b",
            ["‡∏†"] = "bh",
            ["‡∏°"] = "m",
            ["‡∏¢"] = "y",
            ["‡∏£"] = "r",
            ["‡∏•"] = "l",
            ["‡∏ß"] = "v",
            ["‡∏¨"] = "·∏∑",
            ["‡∏®"] = "≈õ",
            ["‡∏©"] = "·π£",
            ["‡∏™"] = "s",
            ["‡∏´"] = "h",
            ["‡∏≠"] = "", -- ['‡∏≠'] = ' º',

            -- Lao
            ["‡∫Å"] = "k",
            ["‡∫Ç"] = "kh",
            ["‡∫Ñ"] = "g",
            ["‡∫Ü"] = "gh",
            ["‡∫á"] = "·πÖ",
            ["‡∫à"] = "c",
            ["‡∫â"] = "ch",
            ["‡∫ä"] = "j",
            ["‡∫å"] = "jh",
            ["‡∫é"] = "√±",
            ["‡∫è"] = "·π≠",
            ["‡∫ê"] = "·π≠h",
            ["‡∫ë"] = "·∏ç",
            ["‡∫í"] = "·∏çh",
            ["‡∫ì"] = "·πá",
            ["‡∫ï"] = "t",
            ["‡∫ñ"] = "th",
            ["‡∫ó"] = "d",
            ["‡∫ò"] = "dh",
            ["‡∫ô"] = "n",
            ["‡∫õ"] = "p",
            ["‡∫ú"] = "ph",
            ["‡∫û"] = "b",
            ["‡∫†"] = "bh",
            ["‡∫°"] = "m",
            ["‡∫ç"] = "y",
            ["‡∫¢"] = "y",
            ["‡∫£"] = "r",
            ["‡∫•"] = "l",
            ["‡∫ß"] = "v",
            ["‡∫¨"] = "·∏∑",
            ["‡∫®"] = "≈õ",
            ["‡∫©"] = "·π£",
            ["‡∫™"] = "s",
            ["‡∫´"] = "h",
            ["‡∫≠"] = "", -- ['‡∫≠'] = ' º',
            ["‡∫î"] = "d"
        }

        local diacritics = {
            -- Bengali - only NFC needed
            [dc("‡¶ï‡¶æ")] = "ƒÅ",
            [dc("‡¶ï‡¶ø")] = "i",
            [dc("‡¶ï‡ßÄ")] = "ƒ´",
            [dc("‡¶ï‡ßÅ")] = "u",
            [dc("‡¶ï‡ßÇ")] = "≈´",
            [dc("‡¶ï‡ßÉ")] = "·πõ",
            [dc("‡¶ï‡ßÑ")] = "·πù",
            [dc("‡¶ï‡ß¢")] = "·∏∑",
            [dc("‡¶ï‡ß£")] = "·∏π",
            [dc("‡¶ï‡ßá")] = "e",
            [dc("‡¶ï‡ßà")] = "ai",
            [dc("‡¶ï‡ßã")] = "o",
            [dc("‡¶ï‡ßå")] = "au",
            [dc("‡¶ï‡ßç")] = "",
            -- Myanmar
            [dc("·ÄÄ·Ä¨")] = "ƒÅ",
            [dc("·ÄÄ·Ä´")] = "ƒÅ",
            [dc("·ÄÄ·Ä≠")] = "i",
            [dc("·ÄÄ·ÄÆ")] = "ƒ´",
            [dc("·ÄÄ·ÄØ")] = "u",
            [dc("·ÄÄ·Ä∞")] = "≈´",
            [dc("·ÄÄ·Åñ")] = "·πõ",
            [dc("·ÄÄ·Åó")] = "·πù",
            [dc("·ÄÄ·Åò")] = "·∏∑",
            [dc("·ÄÄ·Åô")] = "·∏π",
            [dc("·ÄÄ·Ä±")] = "e",
            [dc("·ÄÄ·Ä≤")] = "ai",
            -- The following are multicharacter!
            [dc("·ÄÄ·Ä±·Ä¨")] = "o",
            [dc("·ÄÄ·Ä±·Ä¨·Ä∫")] = "au",
            [dc("·ÄÄ·Ä∫·ÄÄ·Äπ")] = "",
            [dc("·ÄÄ·Ä±·Ä´")] = "o",
            [dc("·ÄÄ·Ä±·Ä´·Ä∫")] = "au",
            [dc("·ÄÄ·Äπ")] = "",
            [dc("·ÄÄ·Ä∫")] = "",
            -- Mon - treatment of Sanskrit au is to be determined!
            [dc("·ÄÄ·Ä≥")] = "ƒ´",
            -- Shan
            [dc("·ÄÄ·ÇÉ")] = "ƒÅ",
            [dc("·ÄÄ·Ä±·ÇÉ")] = "o",
            -- Lanna
            [dc("·®†·©£")] = "ƒÅ",
            [dc("·®†·©§")] = "ƒÅ",
            [dc("·®†·©•")] = "i",
            [dc("·®†·©¶")] = "ƒ´",
            [dc("·®†·©©")] = "u",
            [dc("·®†·©™")] = "≈´",
            ["·©Ç"] = "·πõ",
            ["·©Ñ"] = "·∏∑", -- Syllabic consonants may be very wrong!
            [dc("·®†·©Æ")] = "e",
            [dc("·®†·©±")] = "ai",
            [dc("·®†·©∞")] = "o",
            -- The next two rows are are multicharacter!
            [dc("·®†·©Æ·©£")] = "o",
            [dc("·®†·©Æ·©¢·©£")] = "au",
            [dc("·®†·©Æ·©´·©¢·©£")] = "au",
            [dc("·®†·©Æ·©´·©£")] = "au",
            [dc("·®†·©Æ·©§")] = "o",
            [dc("·®†·©Æ·©¢·©§")] = "au",
            [dc("·®†·©Æ·©´·©¢·©§")] = "au",
            [dc("·®†·©Æ·©´·©§")] = "au",
            [dc("·®†·©†")] = "",
            [dc("·®†·©∫")] = "",
            [dc("·®†·©º")] = "",
            -- Khmer
            [dc("·ûÄ·û∂")] = "ƒÅ",
            [dc("·ûÄ·û∑")] = "i",
            [dc("·ûÄ·û∏")] = "ƒ´",
            [dc("·ûÄ·ûª")] = "u",
            [dc("·ûÄ·ûº")] = "≈´",
            [dc("·ûÄ·üí·û´")] = "·πõ",
            [dc("·ûÄ·üí·û¨")] = "·πù",
            [dc("·ûÄ·üí·û≠")] = "·∏∑",
            [dc("·ûÄ·üí·ûÆ")] = "·∏π", -- Multipart
            [dc("·ûÄ·üÅ")] = "e",
            [dc("·ûÄ·üÉ")] = "ai",
            [dc("·ûÄ·üÑ")] = "o",
            [dc("·ûÄ·üÖ")] = "au",
            [dc("·ûÄ·üí")] = "",
            [dc("·ûÄ·üë")] = "",
            -- Thai
            [dc("‡∏Å‡∏±")] = "a",
            ["‡∏≤"] = "ƒÅ",
            [dc("‡∏Å‡∏¥")] = "i",
            [dc("‡∏Å‡∏µ")] = "ƒ´",
            [dc("‡∏Å‡∏∏")] = "u",
            [dc("‡∏Å‡∏π")] = "≈´",
            ["‡∏§"] = "·πõ",
            ["‡∏§‡πÖ"] = "·πù",
            ["‡∏¶"] = "·∏∑",
            ["‡∏¶‡πÖ"] = "·∏π", -- Multipart
            ["‡πÄ"] = "e",
            ["‡πÑ"] = "ai",
            ["‡πÇ"] = "o",
            ["‡πÄ‡∏≤"] = "au",
            [dc("‡∏Å‡∏∫")] = "",
            [dc("‡∏Å‡πå")] = "",
            ["‡∏∞"] = "a",
            [dc("‡∏Å‡∏∂")] = "i·πÉ", -- Induced by jackbooted I/O
            -- Lao
            [dc("‡∫Å‡∫±")] = "a",
            ["‡∫≤"] = "ƒÅ",
            [dc("‡∫Å‡∫¥")] = "i",
            [dc("‡∫Å‡∫µ")] = "ƒ´",
            [dc("‡∫Å‡∫∏")] = "u",
            [dc("‡∫Å‡∫π")] = "≈´",
            --			['‡∏§']='·πõ', ['‡∏§‡πÖ')]='·πù', ['‡∏¶']='·∏∑', ['‡∏¶‡πÖ']='·∏π', -- Multipart
            ["‡ªÄ"] = "e",
            ["‡ªÑ"] = "ai",
            ["‡ªÇ"] = "o",
            [dc("‡ªÄ‡∫Å‡∫ª‡∫≤")] = "au",
            [dc("‡∫Å‡∫∫")] = "",
            [dc("‡∫Å‡ªå")] = "",
            ["‡∫∞"] = "a",
            [dc("‡∫Å‡∫∂")] = "i·πÉ", -- Induced by jackbooted I/O
            -- Results of subscripts - for 2nd level special subscripts.
            ["·π≠"] = "·π≠",
            ["n"] = "n",
            ["p"] = "p",
            ["m"] = "m",
            ["y"] = "y",
            ["r"] = "r",
            ["l"] = "l",
            ["w"] = "w",
            ["s"] = "s",
            ["h"] = "h"
        }

        local tt = {
            -- Bengali independent vowels
            ["‡¶Ö"] = "a",
            ["‡¶Ü"] = "ƒÅ",
            ["‡¶á"] = "i",
            ["‡¶à"] = "ƒ´",
            ["‡¶â"] = "u",
            ["‡¶ä"] = "≈´",
            ["‡¶ã"] = "·πõ",
            ["‡ß†"] = "·πù",
            ["‡¶å"] = "·∏∑",
            ["‡ß°"] = "·∏π",
            ["‡¶è"] = "e",
            ["‡¶ê"] = "ai",
            ["‡¶ì"] = "o",
            ["‡¶î"] = "au",
            -- chandrabindu, anusvara, visarga & avagraha
            [dc("‡¶ï‡¶Å")] = "mÃê",
            [dc("‡¶ï‡¶Ç")] = "·πÉ",
            ["‡¶É"] = "·∏•",
            ["‡¶Ω"] = "‚Äô",
            -- numerals
            ["‡ß¶"] = "0",
            ["‡ßß"] = "1",
            ["‡ß®"] = "2",
            ["‡ß©"] = "3",
            ["‡ß™"] = "4",
            ["‡ß´"] = "5",
            ["‡ß¨"] = "6",
            ["‡ß≠"] = "7",
            ["‡ßÆ"] = "8",
            ["‡ßØ"] = "9",
            -- Myanmar independent vowels
            ["·Ä°"] = "a",
            ["·Ä°·Ä¨"] = "ƒÅ",
            ["·Ä£"] = "i",
            ["·Ä§"] = "ƒ´",
            ["·Ä•"] = "u",
            ["·Ä¶"] = "≈´",
            ["·Åí"] = "·πõ",
            ["·Åì"] = "·πù",
            ["·Åî"] = "·∏∑",
            ["·Åï"] = "·∏π",
            ["·Äß"] = "e",
            ["·Ä°·Ä≤"] = "ai",
            ["·Ä©"] = "o",
            ["·Ä™"] = "au", -- 2 of these are multi-character keys!
            -- Mon
            ["·Ä£·Ä≥"] = "ƒ´",
            ["·Ä•·ÄØ"] = "≈´",
            ["·Ä®"] = "e",
            -- Shan
            ["·Ä¢"] = "a",
            ["·Ä¢·ÇÉ"] = "ƒÅ",
            ["·Ä¢·Ä≠"] = "i",
            ["·Ä¢·ÄÆ"] = "ƒ´",
            ["·Ä¢·ÄØ"] = "u",
            ["·Ä¢·Ä∞"] = "≈´",
            ["·Ä¢·Ä±"] = "e",
            ["·Ä¢·Ä±·ÇÉ"] = "o",
            ["·Ä¢·Ä≤"] = "ai",
            ["·Ä¢·Ä±·Ä¨·Ä∫"] = "au",
            -- chandrabindu, anusvara, visarga & avagraha
            --			[dc('·ÄÄ')]='mÃê', 
            [dc("·ÄÄ·Ä∂")] = "·πÉ",
            ["·Ä∏"] = "·∏•",
            --  		['']='‚Äô',
            -- numerals
            ["·ÅÄ"] = "0",
            ["·ÅÅ"] = "1",
            ["·ÅÇ"] = "2",
            ["·ÅÉ"] = "3",
            ["·ÅÑ"] = "4",
            ["·ÅÖ"] = "5",
            ["·ÅÜ"] = "6",
            ["·Åá"] = "7",
            ["·Åà"] = "8",
            ["·Åâ"] = "9",
            -- Lanna independent vowels
            ["·©ã"] = "a",
            ["·©ã·©£"] = "ƒÅ",
            ["·©ç"] = "i",
            ["·©é"] = "ƒ´",
            ["·©è"] = "u",
            ["·©ê"] = "≈´",
            ["·©Ç"] = "·πõ", -- ['']='·πù',
            ["·©Ñ"] = "·∏∑",
            --			['']='·∏π',
            ["·©ë"] = "e",
            ["·©í"] = "o",
            ["·©ã·©∞"] = "o",
            ["·©ã·©Æ·©£"] = "o",
            ["·©ê·©£"] = "au",
            ["·©ã·©±"] = "ai",
            --			['']='ai', ['']='au', 
            -- chandrabindu, anusvara, visarga & avagraha
            --			[dc('')]='mÃê',
            [dc("·®†·©¥")] = "·πÉ",
            ["·©°"] = "·∏•",
            [dc("·®†·©ò")] = "·πÖ",
            --			['']='‚Äô',
            -- numerals
            ["·™Ä"] = "0",
            ["·™Å"] = "1",
            ["·™Ç"] = "2",
            ["·™É"] = "3",
            ["·™Ñ"] = "4",
            ["·™Ö"] = "5",
            ["·™Ü"] = "6",
            ["·™á"] = "7",
            ["·™à"] = "8",
            ["·™â"] = "9",
            ["·™ê"] = "0",
            ["·™ë"] = "1",
            ["·™í"] = "2",
            ["·™ì"] = "3",
            ["·™î"] = "4",
            ["·™ï"] = "5",
            ["·™ñ"] = "6",
            ["·™ó"] = "7",
            ["·™ò"] = "8",
            ["·™ô"] = "9",
            -- Khmer independent vowels
            ["·û¢"] = "a",
            ["·û¢·û∂"] = "ƒÅ",
            ["·û•"] = "i",
            ["·û¶"] = "ƒ´",
            ["·ûß"] = "u",
            ["·û®"] = "≈´",
            ["·û´"] = "·πõ",
            ["·û¨"] = "·πù",
            ["·û≠"] = "·∏∑",
            ["·ûÆ"] = "·∏π",
            ["·ûØ"] = "e",
            ["·û∞"] = "ai",
            ["·û±"] = "o",
            ["·û≤"] = "o",
            ["·û≥"] = "au",
            -- chandrabindu, anusvara, visarga & avagraha
            --			[dc('·ûÄ')]='mÃê',
            [dc("·ûÄ·üÜ")] = "·πÉ",
            ["·üá"] = "·∏•",
            --			['']='‚Äô',
            -- numerals
            ["·ü†"] = "0",
            ["·ü°"] = "1",
            ["·ü¢"] = "2",
            ["·ü£"] = "3",
            ["·ü§"] = "4",
            ["·ü•"] = "5",
            ["·ü¶"] = "6",
            ["·üß"] = "7",
            ["·ü®"] = "8",
            ["·ü©"] = "9",
            ["·ü∞"] = "0",
            ["·ü±"] = "1",
            ["·ü≤"] = "2",
            ["·ü≥"] = "3",
            ["·ü¥"] = "4",
            ["·üµ"] = "5",
            ["·ü∂"] = "6",
            ["·ü∑"] = "7",
            ["·ü∏"] = "8",
            ["·üπ"] = "9",
            -- Thai miscellanea
            -- independent vowels
            ["‡∏§"] = "·πõ",
            ["‡∏§‡πÖ"] = "·πù",
            ["‡∏¶"] = "·∏∑",
            ["‡∏¶‡πÖ"] = "·∏π",
            -- chandrabindu, anusvara, visarga & avagraha
            --			[dc('·ûÄ')]='mÃê',
            [dc("‡∏Å‡πç")] = "·πÉ",
            ["‡∏∞"] = "·∏•",
            --			['']='‚Äô',
            -- numerals
            ["‡πê"] = "0",
            ["‡πë"] = "1",
            ["‡πí"] = "2",
            ["‡πì"] = "3",
            ["‡πî"] = "4",
            ["‡πï"] = "5",
            ["‡πñ"] = "6",
            ["‡πó"] = "7",
            ["‡πò"] = "8",
            ["‡πô"] = "9",
            -- Lao miscellanea
            -- chandrabindu, anusvara, visarga & avagraha
            --			[dc('·ûÄ')]='mÃê',
            [dc("‡∫Å‡ªç")] = "·πÉ",
            ["‡∫∞"] = "·∏•",
            --			['']='‚Äô',
            -- numerals
            ["‡ªê"] = "0",
            ["‡ªë"] = "1",
            ["‡ªí"] = "2",
            ["‡ªì"] = "3",
            ["‡ªî"] = "4",
            ["‡ªï"] = "5",
            ["‡ªñ"] = "6",
            ["‡ªó"] = "7",
            ["‡ªò"] = "8",
            ["‡ªô"] = "9",
            -- All scripts
            -- punctuation        
            ["‡••"] = ".",
            ["·Åã"] = ".",
            ["·™©"] = ".",
            ["·™´"] = ".",
            ["·üï"] = ".",
            ["‡πö"] = ".", -- double danda
            ["‡•§"] = ".",
            ["·Åä"] = ".",
            ["‚Äå·™®"] = ".",
            ["·™™"] = ".",
            ["·üî"] = ".",
            ["‡∏Ø"] = ".",
            ["‡∫Ø"] = ".", -- danda
            -- Vedic extensions
            ["·≥µ"] = "x",
            ["·≥∂"] = "f",
            -- Om
            --  		['‡•ê']='o·πÉ',
            -- reconstructed
            ["*"] = ""
        }
        -- Also handle subscript consonants encoded as marks.
        local S = dc("·ÄÄ·Äª·ÄÄ·Äº·ÄÄ·ÄΩ·ÄÄ·Äæ·ÄÄ·Åû·ÄÄ·Åü·ÄÄ·Å†") .. -- Myanmar subscripts
        dc("·®†·©ï·®†·©ñ·®†·©õ·®†·©ú·®†·©ù·®†·©û") -- Lanna subscripts
        -- consonants and part 1 of NFC-multi-part independent vowels.
        local C = "[‡¶ï‡¶ñ‡¶ó‡¶ò‡¶ô‡¶ö‡¶õ‡¶ú‡¶ù‡¶û‡¶ü‡¶†‡¶°‡¶¢‡¶£‡¶§‡¶•‡¶¶‡¶ß‡¶®‡¶™‡¶´‡¶¨‡¶≠‡¶Æ‡¶Ø‡¶∞‡¶≤‡§µ‡§≥‡¶∂‡¶∑‡¶∏‡¶π‡ß∞‡ß±" .. -- Bengali
        "·ÄÄ·ÄÅ·ÄÇ·ÄÉ·ÄÑ·ÄÖ·ÄÜ·Äá·Äà·Äâ·Äã·Äå·Äç·Äé·Äè·Äê·Äë·Äí·Äì·Äî·Äï·Äñ·Äó·Äò·Äô·Äö·Äõ·Äú·Äù·Ä†·Åê·Åë·Äû·Äü·Ää·Äø·Ä°" .. -- Myanmar Part 1
        "·Åö·Åõ·Åµ·Å∂·Å∑Íß†·Å∏Íß°·ÅπÍß¢·Å∫Í©¶Í©ßÍ©®Í©©Íß£·ÅªÍ©™·Åº·ÅΩ·ÅøÍß§Í©Æ·ÇÅ·Ä¢·Ä£·Ä•" .. -- Myanmar Part 2 (Mon and Shan)
        "·®†·®°·®£·®•·®¶·®ß·®®·®©·®´·®¨·®≠·®Æ·®Ø·®∞·®±·®≤·®≥·®¥·®µ·®∂·®∑·®∏·®π·®ª·®Ω·®æ·®ø·©Å·©É·©Ö·©ä·©Ü·©á·©à·©â·©î·©ã·©ê" .. -- Lanna
        "·ûÄ·ûÅ·ûÇ·ûÉ·ûÑ·ûÖ·ûÜ·ûá·ûà·ûâ·ûä·ûã·ûå·ûç·ûé·ûè·ûê·ûë·ûí·ûì·ûî·ûï·ûñ·ûó·ûò·ûô·ûö·ûõ·ûú·û°·ûù·ûü·ûû·û†·û¢" .. -- Khmer
        "‡∏Å‡∏Ç‡∏Ñ‡∏Ü‡∏á‡∏à‡∏â‡∏ä‡∏å‡∏ç‡∏è‡∏ê‡∏ë‡∏í‡∏ì‡∏ï‡∏ñ‡∏ó‡∏ò‡∏ô‡∏õ‡∏ú‡∏û‡∏†‡∏°‡∏¢‡∏£‡∏•‡∏ß‡∏®‡∏©‡∏™‡∏´‡∏¨‡∏≠‡∏§‡∏¶" .. -- Thai.
        "‡∫Å‡∫Ç‡∫Ñ‡∫Ü‡∫á‡∫à‡∫â‡∫ä‡∫å‡∫é‡∫è‡∫ê‡∫ë‡∫í‡∫ì‡∫ï‡∫ñ‡∫ó‡∫ò‡∫ô‡∫õ‡∫ú‡∫û‡∫†‡∫°‡∫ç‡∫¢‡∫£‡∫•‡∫ß‡∫®‡∫©‡∫™‡∫´‡∫¨‡∫≠" .. -- Lao
        S .. "][" .. u(0x09bc, 0x200d) .. "]?" -- And allow Bengali nukta or necessary ZWJ.

        -- One character diacritics 
        local dia = dc("[‡¶ï‡¶æ‡¶ï‡¶ø‡¶ï‡ßÄ‡¶ï‡ßÅ‡¶ï‡ßÇ‡¶ï‡ßÉ‡¶ï‡ßÑ‡¶ï‡ß¢‡¶ï‡ß£‡¶ï‡ßá‡¶ï‡ßà‡¶ï‡ßã‡¶ï‡ßå‡¶ï‡ßç" .. -- Bengali
        "·ÄÄ·Ä¨·ÄÄ·Ä´·ÄÄ·Ä≠·ÄÄ·ÄÆ·ÄÄ·ÄØ·ÄÄ·Ä∞·ÄÄ·Åñ·ÄÄ·Åó·ÄÄ·Åò·ÄÄ·Åô·ÄÄ·Ä±·ÄÄ·Ä≤·ÄÄ·Äπ·ÄÄ·Ä∫·ÄÄ·Ä≥·ÄÄ·ÇÉ" .. -- Myanmar
        "·®†·©£·®†·©§·®†·©•·®†·©¶·®†·©©·®†·©™·©Ç·©Ñ·®†·©Æ·®†·©±·®†·©∞·®†·©†·®†·©∫·®†·©º" .. -- Lanna
        "·®†·©´·©¢" .. -- Lanna diacritics in second or third place.
        "·ûÄ·û∂·ûÄ·û∑·ûÄ·û∏·ûÄ·ûª·ûÄ·ûº·ûÄ·üÅ·ûÄ·üÉ·ûÄ·üÑ·ûÄ·üÖ·ûÄ·üí·ûÄ·üë" .. -- Khmer
        "‡∏Å‡∏±‡∏Å‡∏∏‡∏¥‡∏Å‡∏π‡∏µ‡πÄ‡πÇ‡πÑ‡∏≤‡πÖ‡∏§‡∏¶‡∏Å‡∏∫‡∏Å‡∏∂‡∏Å‡πå" .. -- Thai
        "‡∫Å‡∫±‡∫Å‡∫∏‡∫¥‡∫Å‡∫π‡∫µ‡ªÄ‡∫Å‡∫ª‡∫≤‡ªÇ‡ªÑ‡∫Å‡∫∫‡∫Å‡∫∂‡∫Å‡ªå" .. -- Lao
        "]")
        local diax = {}
        local ti = table.insert;
        ti(diax, "(")
        ti(diax, dia)
        ti(diax, "?")
        ti(diax, dia)
        ti(diax, "?")
        ti(diax, dia)
        ti(diax, "?")
        ti(diax, dia)
        ti(diax, "?)")
        diax = table.concat(diax)
        local explicit = nil
        if options and options.impl then
            if options.impl == "yes" then
                explicit = false
            elseif options.impl == "no" then
                explicit = true
            end
        end
        if sc == "Khmr" then
            dep_liquid = "(" .. C .. dc(")(·ûÄ·üí)") .. "([·û´·û¨·û≠·ûÆ])"; -- Avoid gsub in gsub bug.
            text = gsub(text, dep_liquid, function(c, j, d) return consonants[c] .. d end)
            -- Regularise robat
            robat_fix3 = "(" .. C .. dc("·ûÄ·üí") .. C .. dc("·ûÄ·üí") .. C .. ")(" .. dc("·ûÄ·üå)")
            robat_fix2 = "(" .. C .. dc("·ûÄ·üí") .. C .. ")(" .. dc("·ûÄ·üå)")
            robat_fix1 = "(" .. C .. ")(" .. dc("·ûÄ·üå)")
            derobatted = "·ûö·üí" .. "%1"
            text = gsub(text, robat_fix3, derobatted)
            text = gsub(text, robat_fix2, derobatted)
            text = gsub(text, robat_fix1, derobatted)
        elseif sc == "Thai" or sc == "Laoo" then
            local match = mw.ustring.match
            local v1 = dc("[‡∏Å‡∏±‡∫Å‡∫±]")
            local v2 = dc("[‡∏Å‡∏±‡∏∞‡∫Å‡∫±‡∫∞]")
            local va = dc("[‡∏Å‡∏∫]")
            if lang == "sa" then
                if match(text, v1) then explicit = true end -- SARA A is visarga!
            else
                if match(text, v2) then explicit = true end
            end
            local yLao, nuktaed
            if sc == "Laoo" then
                if options and options.y then
                    if options.y == "yaa" or options.y == "‡∫¢" then
                        yLao = "yaa"
                    elseif options.y == "yung" or options.y == "‡∫ç" then
                        yLao = "yung"
                    end
                end
                if not yLao then
                    if match(text, "‡∫¢") then
                        yLao = "yaa"
                    else
                        yLao = "yung"
                    end
                end
                if explicit then
                    nuktaed = match(text, u(0xeba))
                else
                    local str
                    if lang == "sa" then
                        str = dc("‡∫Å‡∫∫[‡∫Å‡∫±‡∫≤‡∫Å‡∫∏‡∫¥‡∫Å‡∫π‡∫µ]")
                    else
                        str = dc("‡∫Å‡∫∫[‡∫Å‡∫±‡∫≤‡∫Å‡∫∏‡∫¥‡∫Å‡∫π‡∫µ‡∫∞]")
                    end
                    nuktaed = match(text, str)
                end
                if nuktaed then -- Convert to extended alphabet
                    rs = {["‡∫Ñ‡∫∫"] = "‡∫Ü", ["‡∫™‡∫∫"] = "‡∫â", ["‡∫ä‡∫∫"] = "‡∫å", ["‡∫ç‡∫∫"] = "‡∫é", ["‡∫ï‡∫∫"] = "‡∫è", ["‡∫ñ‡∫∫"] = "‡∫ê", ["‡∫î"] = "‡∫ë", ["‡∫ô‡∫∫"] = "‡∫ì", ["‡∫ó‡∫∫"] = "‡∫ò", ["‡∫û‡∫∫"] = "‡∫†", ["‡∫•‡∫∫"] = "‡∫¨", ["‡∫á‡∫∫"] = dc("‡ªç‡∫Å")}
                    text = gsub(text, "[‡∫Ñ‡∫™‡∫ä‡∫ç‡∫ï‡∫ñ‡∫î‡∫ô‡∫ó‡∫û‡∫•‡∫á]" .. u(0xeba) .. "?", rs)
                    explicit = true
                end
                if yLao == "yaa" then text = gsub(text, "‡∫ç", "‡∫é") end
            end
            if match(text, va) then explicit = false end
            if explicit == nil then
                -- It looks as though gsub (from dc()) and match interfere, so need local variables.
                local ngf1 = dc("[‡∏Å‡∏±‡∏Å‡∏¥‡∏Å‡∏∏‡∫Å‡∫±‡∫Å‡∫¥‡∫Å‡∫∏][‡∏á‡∫á]$")
                local ngf2 = dc("[‡∏Å‡∏±‡∏Å‡∏¥‡∏Å‡∏∏‡∫Å‡∫±‡∫Å‡∫¥‡∫Å‡∫∏][‡∏á‡∫á] ")
                if (match(text, ngf1) or match(text, ngf2)) then explicit = true end
            end
            if not explicit then
                diax = gsub(diax, "[‡∏§‡∏¶]", "‡∏≤") -- Treat as ‡∏§ and ‡∏¶ consonants.
                local search = "([‡πÄ‡πÇ‡πÑ‡ªÄ‡ªÇ‡ªÑ])(" .. C .. ")([" .. u(0x0e3a, 0xeba) .. "])"
                local longswap = function(p, c, v) return c .. v .. p end
                text = gsub(text, search, longswap)
                text = gsub(text, search, longswap)
            end
            if false and sc == "Laoo" then -- Keep around for future debugging
                local nr = "F"
                if nuktaed then nr = "T" end
                if yLao then
                    nr = nr .. yLao
                else
                    nr = nr .. "y?"
                end
                nr = nr .. "-"
                if not options or not options.impl then
                    if explicit == nil then
                        text = "GN-" .. nr .. text
                    elseif explicit == false then
                        text = "GI-" .. nr .. text
                    else
                        text = "GE-" .. nr .. text
                    end
                elseif options.impl == "both" then
                    if explicit == nil then
                        text = "N-" .. nr .. text
                    elseif explicit == false then
                        text = "I-" .. nr .. text
                    else
                        text = "E-" .. nr .. text
                    end
                elseif options.impl == "yes" then
                    text = "Y-" .. nr .. text
                elseif options.impl == "no" then
                    text = "N-" .. nr .. text
                elseif options.impl then
                    text = options.impl .. nr .. text
                end
            end
            local pair = "([‡πÄ‡πÇ‡πÑ‡ªÄ‡ªÇ‡ªÑ])(" .. C .. ")"
            text = gsub(text, pair, "%2%1")
            if explicit and lang ~= "sa" then -- SARA A is a vowel.
                diax = "([‡∏∞‡∫∞" .. string.sub(diax, 3)
            end
            if explicit and sc == "Laoo" then -- Clean up clusters
                ass = {["‡∫Å‡∫Ñ"] = "‡∫Ñ‡∫Ñ", ["‡∫î‡∫à"] = "‡∫à‡∫à", ["‡∫î‡∫ä"] = "‡∫ä‡∫ä", ["‡∫î‡∫ï"] = "‡∫ï‡∫ï", ["‡∫î‡∫ñ"] = "‡∫ï‡∫ñ", ["‡∫î‡∫ó"] = "‡∫ó‡∫ó", ["‡∫î‡∫™"] = "‡∫™‡∫™", ["‡∫ç‡∫à"] = "‡∫é‡∫à", ["‡∫ç‡∫™"] = "‡∫é‡∫â", ["‡∫ç‡∫ä"] = "‡∫é‡∫ä", ["‡∫ô‡∫à"] = "‡∫ô‡∫à", ["‡∫ô‡∫™"] = "‡∫é‡∫â", ["‡∫ô‡∫ä"] = "‡∫é‡∫ä", ["‡∫ô‡∫ç"] = "‡∫é‡∫é", ["‡∫ö‡∫õ"] = "‡∫õ‡∫õ", ["‡∫ö‡∫ú"] = "‡∫õ‡∫ú", ["‡∫ö‡∫û"] = "‡∫û‡∫û", ["‡∫ö"] = "‡∫õ"}
                text = gsub(text, "[‡∫Å‡∫î‡∫ö‡∫ç‡∫ô][‡∫Ñ‡∫ï‡∫ñ‡∫ó‡∫õ‡∫ú‡∫û‡∫™‡∫•‡∫à‡∫™‡∫ä‡∫ç]?", ass)
            end
        end
        if sc == "Lana" then
            -- Disambiguate lanna combining loop below.
            cl_search = dc("[·®≤·®ª·®æ]·®†·©õ")
            text = gsub(text, cl_search, {["·®≤·©õ"] = "·®≤·©†·®≥", ["·®ª·©õ"] = "·®ª·©†·®ª", ["·®æ·©õ"] = "·®æ·©†·®ª"})
        end
        if sc == "Mymr" or sc == "Lana" then
            local fn = function(c, d) return consonants[c] .. d end
            local search = "(" .. C .. ")([" .. S .. "])"
            text = gsub(text, search, fn);
            text = gsub(text, search, fn); -- and again
        end
        if sc == "Beng" then
            -- Aberrant conversion:
            text = gsub(text, u(0x09b2, 0x9cd, 0x9bc, 0x9cd, 0x9b9), "·∏∑‡¶π") -- raw
            text = gsub(text, u(0x09b2, 0x9bc, 0x9cd, 0x9cd, 0x9b9), "·∏∑‡¶π") -- NFC
            -- Proper conversion:
            text = gsub(text, u(0x09b2, 0x9cd, 0x9bc, 0x9b9), "·∏∑‡¶π") -- not NFC
            --			text = gsub(text, u(0x09b2, 0x9bc, 0x9cd, 0x9b9), '·∏∑‡¶π') -- NFC
        end
        text = gsub(text, "(" .. C .. ")" .. diax, function(c, d)
            local val = tt[c .. d]
            if val then return val end
            local cn = consonants[c]
            if not cn then return "X(" .. c .. ")" end
            if d ~= "" then
                return cn .. (diacritics[d] or "NIL(" .. d .. ")")
            elseif explicit then
                return cn
            else
                return cn .. "a"
            end
        end)
        text = gsub(text, ".", tt)
        -- Bodge alphabetic Thai and Lao anusvara
        if explicit and text then
            text = gsub(text, "·πÖ$", "·πÉ")
            text = gsub(text, "·πÖ([^kg])", "·πÉ%1")
        end
    else
        text = nil -- Not ready for use yet!
    end
    return text
end

function export.tr(text, lang, sc) return export.trwo(text, lang, sc, {}) end

return export
